/*
 * Copyright (C) 2019 Clément Gérardin @ Marseille.fr
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package gcodeeditor.gui;

import java.awt.Window;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Clément
 */
public class JRotationPanel extends javax.swing.JPanel {

    Window parent;
    boolean doAction;
    double angle;
    int copies;
    boolean keepOriginal, keepOrientation;
    boolean fromCenter;
    /**
     * Creates new form JRotationPanel
     */
    public JRotationPanel(Window parent) {
        this.parent = parent;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jRadioButtonO2D = new javax.swing.JRadioButton();
        jRadioButtonOCenter = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCopies = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldAngle = new javax.swing.JTextField();
        jCheckBoxOriginal = new javax.swing.JCheckBox();
        jCheckBoxOrientation = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButtonCancel = new javax.swing.JButton();
        jButtonOK = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Origin"));

        jRadioButtonO2D.setSelected(true);
        jRadioButtonO2D.setText("2D Cursor");
        jRadioButtonO2D.setToolTipText("Turn around 2D Cursor");
        jRadioButtonO2D.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonO2DStateChanged(evt);
            }
        });
        jRadioButtonO2D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonO2DActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonO2D);

        jRadioButtonOCenter.setText("Center");
        jRadioButtonOCenter.setToolTipText("turn around center of path");
        jRadioButtonOCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOCenterActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonOCenter);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jPanel1, gridBagConstraints);

        jLabel2.setText("Count");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        add(jLabel2, gridBagConstraints);

        jTextFieldCopies.setColumns(6);
        jTextFieldCopies.setText("1");
        jTextFieldCopies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCopiesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 66;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 8, 0, 0);
        add(jTextFieldCopies, gridBagConstraints);

        jLabel1.setText("Angle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        add(jLabel1, gridBagConstraints);

        jTextFieldAngle.setColumns(6);
        jTextFieldAngle.setToolTipText("Angle in degre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 66;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 8, 0, 0);
        add(jTextFieldAngle, gridBagConstraints);

        jCheckBoxOriginal.setText("Keep original");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 0);
        add(jCheckBoxOriginal, gridBagConstraints);

        jCheckBoxOrientation.setText("Keep orientation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jCheckBoxOrientation, gridBagConstraints);

        jButtonCancel.setText("Close");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonCancel);

        jButtonOK.setText("Apply");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonOK);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCopiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCopiesActionPerformed
        try {
            int n = Integer.valueOf( jTextFieldCopies.getText());
            if ( n >= 1) {
                jCheckBoxOriginal.setSelected( n != 1);
                return;
            }
        } catch (Exception e) { }
        jTextFieldCopies.setText("1");
    }//GEN-LAST:event_jTextFieldCopiesActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        doAction = false;
        parent.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        try {
            angle = Double.parseDouble(jTextFieldAngle.getText());
            copies = Integer.valueOf(jTextFieldCopies.getText());
            keepOriginal = jCheckBoxOriginal.isSelected();
            fromCenter = jRadioButtonOCenter.isSelected();
            keepOrientation = jCheckBoxOrientation.isEnabled() && jCheckBoxOrientation.isSelected();
            doAction = true;
            parent.setVisible(false);
        } catch ( Exception e) {
            JOptionPane.showMessageDialog(parent, "Invalid Parameter detected", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jRadioButtonO2DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonO2DActionPerformed
        jRadioButtonOCenter.setSelected(false);
    }//GEN-LAST:event_jRadioButtonO2DActionPerformed

    private void jRadioButtonOCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOCenterActionPerformed
        jRadioButtonO2D.setSelected(false);
    }//GEN-LAST:event_jRadioButtonOCenterActionPerformed

    private void jRadioButtonO2DStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonO2DStateChanged
        jCheckBoxOrientation.setEnabled( jRadioButtonO2D.isSelected());
    }//GEN-LAST:event_jRadioButtonO2DStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JCheckBox jCheckBoxOrientation;
    private javax.swing.JCheckBox jCheckBoxOriginal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonO2D;
    private javax.swing.JRadioButton jRadioButtonOCenter;
    private javax.swing.JTextField jTextFieldAngle;
    private javax.swing.JTextField jTextFieldCopies;
    // End of variables declaration//GEN-END:variables

    boolean showDialog(JFrame parent) {
        this.parent.setLocationRelativeTo(parent);
        this.parent.setVisible(true);
        return doAction;
    }
}
