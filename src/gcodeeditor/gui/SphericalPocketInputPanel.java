/*
 * Copyright (C) 2019 Clément GERARDIN @ Marseille.fr
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package gcodeeditor.gui;

import gelements.GSphericalPocket;
import java.awt.Frame;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Clément GERARDIN @ Marseille.fr
 */
public class SphericalPocketInputPanel extends javax.swing.JPanel {

    JDialog d;
    Frame parent;
    private GSphericalPocket sp;
    /**
     * Creates new SphericalPocketInputPanel
     */
    public SphericalPocketInputPanel(Frame owner) {
        initComponents();
        d = new JDialog(parent=owner, "Spherical 3D pocket", true);
        d.getContentPane().add(this);
        d.pack();
    }
    
    /**
     * @param sp the new SphericalPocket to set
     * @return true if button OK has been used and values ak OK (sp can be created).
     */
    public boolean edit(GSphericalPocket sp) {
        this.sp = sp;
        d.setLocationRelativeTo(parent);
        d.setVisible(true);
        if ( sp != null) {
            try {
                if ( ! sp.setValues( Double.valueOf(jTextFieldR.getText()), 
                                Double.valueOf(jTextFieldH.getText()))) {
                    JOptionPane.showMessageDialog(parent, "Wrong value", "Error", JOptionPane.ERROR_MESSAGE);
                    sp = null;
                }
                
            } catch ( NumberFormatException e) {
                JOptionPane.showMessageDialog(parent, e.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                sp=null;
            }
        }
        return sp != null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldR = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldH = new javax.swing.JTextField();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/spherical-pocket.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel1, gridBagConstraints);

        jLabel2.setText("Radius of the sphere");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jLabel2, gridBagConstraints);

        jTextFieldR.setColumns(8);
        jTextFieldR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 200.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jTextFieldR, gridBagConstraints);

        jLabel3.setText("Inlay depth into the material");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jLabel3, gridBagConstraints);

        jTextFieldH.setColumns(8);
        jTextFieldH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jTextFieldH, gridBagConstraints);

        jButtonOk.setText("OK");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jButtonOk, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jButtonCancel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRActionPerformed
        jTextFieldH.requestFocus();
    }//GEN-LAST:event_jTextFieldRActionPerformed

    private void jTextFieldHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHActionPerformed
        jTextFieldR.requestFocus();
        jButtonOkActionPerformed(null);
    }//GEN-LAST:event_jTextFieldHActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
         sp = null;
         d.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        d.setVisible(false);
    }//GEN-LAST:event_jButtonOkActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextFieldH;
    private javax.swing.JTextField jTextFieldR;
    // End of variables declaration//GEN-END:variables
}
