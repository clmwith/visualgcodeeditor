/*
 * Copyright (C) 2019 Clément Gérardin @ Marseille.fr
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package gcodeeditor.gui.dialogs;

import gcodeeditor.gui.dialogs.ManagedPanel;
import gelements.GCylindricalPocket;
import java.awt.Frame;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Clément
 */
public class CylindricalPocketInputPanel extends ManagedPanel {

    GCylindricalPocket cp;
    
    /**
     * Creates new CylindricalPocketPanel
     */
    public CylindricalPocketInputPanel() {
        super("Cylindrical pocket (3D)");
        initComponents();
    }

    @Override
    void setParam(Object param) {
        assert( param instanceof GCylindricalPocket);
        cp = (GCylindricalPocket)param;
    }
    
    @Override
    public boolean validateFields() {
        double radius = parseExpression(jTextFieldRadius, false);
        double len = parseExpression(jTextFieldLength, false);
        double inlayDepth = parseExpression(jTextFieldInlay, false);
        double rotationAngle = parseExpression(jTextFieldRotation, false);
            
        if ( isNaN(radius) || isNaN(len) || isNaN(inlayDepth) || isNaN(rotationAngle)) return false;
        cp.setValues(radius, len, inlayDepth, rotationAngle);
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldRadius = new javax.swing.JTextField();
        jTextFieldLength = new javax.swing.JTextField();
        jTextFieldInlay = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldRotation = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cylindricalPocket.png"))); // NOI18N
        jLabel1.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        add(jLabel1, gridBagConstraints);

        jLabel2.setText("Radius (R) of the cylinder");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        add(jLabel2, gridBagConstraints);

        jLabel3.setText("Length (L) of the cylinder");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        add(jLabel3, gridBagConstraints);

        jLabel4.setText("Inlay depth (H)");
        jLabel4.setToolTipText("Inlay depth of the cylinder into the material");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        add(jLabel4, gridBagConstraints);

        jTextFieldRadius.setFocusCycleRoot(true);
        jTextFieldRadius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRadiusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 12, 0, 12);
        add(jTextFieldRadius, gridBagConstraints);

        jTextFieldLength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLengthActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 12, 0, 12);
        add(jTextFieldLength, gridBagConstraints);

        jTextFieldInlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInlayActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 12);
        add(jTextFieldInlay, gridBagConstraints);

        jLabel5.setText("Rotation");
        jLabel5.setToolTipText("Rotation of the cylinder on the surface");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        add(jLabel5, gridBagConstraints);

        jTextFieldRotation.setText("0");
        jTextFieldRotation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRotationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.ipadx = 170;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 12);
        add(jTextFieldRotation, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldRadiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRadiusActionPerformed
        jTextFieldLength.requestFocus();
    }//GEN-LAST:event_jTextFieldRadiusActionPerformed

    private void jTextFieldLengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLengthActionPerformed
        jTextFieldInlay.requestFocus();
    }//GEN-LAST:event_jTextFieldLengthActionPerformed

    private void jTextFieldInlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInlayActionPerformed
        jTextFieldRotation.requestFocus();
    }//GEN-LAST:event_jTextFieldInlayActionPerformed

    private void jTextFieldRotationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRotationActionPerformed
        jTextFieldRadius.requestFocus();
    }//GEN-LAST:event_jTextFieldRotationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextFieldInlay;
    private javax.swing.JTextField jTextFieldLength;
    private javax.swing.JTextField jTextFieldRadius;
    private javax.swing.JTextField jTextFieldRotation;
    // End of variables declaration//GEN-END:variables
}
