/*
 * Copyright (C) 2019 Clément Gérardin @ Marseille.fr
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package gcodeeditor.gui;

import gcodeeditor.BackgroundPictureParameters;
import java.awt.geom.Rectangle2D;
import java.io.File;
import java.io.IOException;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Clément
 */
public class BackgroundPicturePanel extends javax.swing.JPanel implements BackgroundPictureParameters.ParameterChangedListenerInterface {

    final JDialog frame;
    BackgroundPictureParameters params, original;
    static File lastOpenDir;
    
    /**
     * Creates new form BackgroundPicturePanel
     * @param parentFrame the parent window of the edit frame
     * @param parameters the parameter to edit
     * @param title the title of the frame
     */
    public BackgroundPicturePanel(JFrame parentFrame, BackgroundPictureParameters parameters, String title) {
        original=parameters;
        initComponents();
        frame = new JDialog(parentFrame, title, true);
        frame.getContentPane().add(this);
        frame.pack();
    }

    /** Show a dialog window containing this panel, to edit background image paremters. */
    public void showDialog(JFrame parent) {
        params = original.clone();
        backgroundPictureParameterChanged();
        frame.setLocationRelativeTo(parent);
        frame.setVisible(true);
    }

    @Override
    public void backgroundPictureParameterChanged() {
        SwingUtilities.invokeLater(() -> {
            if ( params.getViewRegion() != null) {
                if ( params.getViewRegion().getWidth() != 0)
                    jTextFieldWidth.setText("" + params.getViewRegion().getWidth());
                else 
                    jTextFieldWidth.setText("");
                if ( params.getViewRegion().getHeight()!= 0)
                    jTextFieldHeight.setText("" + params.getViewRegion().getHeight());
                else 
                    jTextFieldHeight.setText("");
            }
            jTextFieldFileName.setText(params.getFileName());
            jTextFieldAlpha.setText( String.format(Locale.ROOT, "%.1f", params.getAlpha()));
            jTextFieldDx.setText( "" + params.getViewX());
            jTextFieldDy.setText( "" + params.getViewY());
            jTextFieldRotation.setText(String.format(Locale.ROOT, "%.3f", params.getRotation()));
            jTextFieldAlpha.setText( String.format(Locale.ROOT, "%.1f", params.getAlpha()));
        });  
    }
    
    boolean isImageVisible() {
        return original.isVisible() && (original.getViewRegion() != null);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelFile = new javax.swing.JLabel();
        jCheckBoxVisible = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldWidth = new javax.swing.JTextField();
        jTextFieldDx = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDy = new javax.swing.JTextField();
        jTextFieldHeight = new javax.swing.JTextField();
        jCheckBoxAspect = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldFileName = new javax.swing.JTextField();
        jButtonBrowse = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabelRotation = new javax.swing.JLabel();
        jTextFieldRotation = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldAlpha = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        jLabelFile.setText("File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 0, 0);
        add(jLabelFile, gridBagConstraints);

        jCheckBoxVisible.setSelected(true);
        jCheckBoxVisible.setText("Visible");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 0);
        add(jCheckBoxVisible, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Location"));

        jLabel3.setText("Width");

        jLabel7.setText("Height");

        jTextFieldWidth.setColumns(5);
        jTextFieldWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldWidthActionPerformed(evt);
            }
        });

        jTextFieldDx.setColumns(5);

        jLabel8.setText("Dx");

        jLabel4.setText("Dy");

        jTextFieldDy.setColumns(5);

        jTextFieldHeight.setColumns(5);
        jTextFieldHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHeightActionPerformed(evt);
            }
        });

        jCheckBoxAspect.setSelected(true);
        jCheckBoxAspect.setText("Keep aspect");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel8)
                        .addGap(33, 33, 33)
                        .addComponent(jTextFieldDx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBoxAspect)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldDy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(27, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldDy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBoxAspect))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 0);
        add(jPanel1, gridBagConstraints);

        jButtonOk.setText("OK");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButtonCancel)
                    .addGap(6, 6, 6)
                    .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 27, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonCancel)
                        .addComponent(jButtonOk))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jTextFieldFileName.setColumns(20);
        jPanel3.add(jTextFieldFileName);

        jButtonBrowse.setText("Browse");
        jButtonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonBrowse);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabelRotation.setText("Rotation");
        jPanel4.add(jLabelRotation);

        jTextFieldRotation.setColumns(5);
        jPanel4.add(jTextFieldRotation);

        jLabel6.setText("    Alpha");
        jPanel4.add(jLabel6);

        jTextFieldAlpha.setColumns(5);
        jPanel4.add(jTextFieldAlpha);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(jPanel4, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseActionPerformed
        if ( lastOpenDir == null) lastOpenDir = gcodeeditor.gui.JEditorFrame.lastImportDir;
        
        JFileChooser f = new JFileChooser();
        f.setFileFilter(new FileNameExtensionFilter("Picture (*.gif,*.jpeg,*.jpg,*.png)", "gif", "jpeg", "jpg", "png"));
        if ( lastOpenDir == null) lastOpenDir = new File(".");
        f.setCurrentDirectory(lastOpenDir);
        
        int rVal = f.showOpenDialog(this);
        if ( rVal == JFileChooser.APPROVE_OPTION) {
            lastOpenDir = f.getSelectedFile().getParentFile();
            jTextFieldFileName.setText(f.getSelectedFile().getAbsolutePath());
            try {
                params.setFileName(f.getSelectedFile().getAbsolutePath());
                params.reloadImage();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog( frame, "Error loading image:\n"+ex.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                jTextFieldFileName.setText("");
            }
        }
    }//GEN-LAST:event_jButtonBrowseActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        frame.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        try {
            double w, h;
           if ( jTextFieldWidth.getText().equals("")) w = 0;
            else w = Double.parseDouble(jTextFieldWidth.getText());
            if ( jTextFieldHeight.getText().equals("")) h = 0;
            else h = Double.parseDouble(jTextFieldHeight.getText());
            
            original.setAll(jTextFieldFileName.getText(), 
                Double.parseDouble(jTextFieldDx.getText()),
                Double.parseDouble(jTextFieldDy.getText()), 
                w, h,
                Float.valueOf(jTextFieldRotation.getText()),
                Float.valueOf(jTextFieldAlpha.getText()),
                jCheckBoxVisible.isSelected(), true);
            frame.setVisible(false);
        } catch ( NumberFormatException e) {
            JOptionPane.showMessageDialog(frame, "Wrong numerical value detected.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(frame, "Wrong imagefile :\n\t"+ex.getLocalizedMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jTextFieldWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldWidthActionPerformed
        double len;
        Rectangle2D dim;
        if ( (dim = params.getViewRegion()) == null) return;
        try {
            if ( jTextFieldWidth.getText().equals("")) len = 0;
            else len = Double.parseDouble(jTextFieldWidth.getText());
            
            if ( params.getViewRegion() == null) return;
            if ( jCheckBoxAspect.isEnabled() && jCheckBoxAspect.isSelected()) {
                if ( len == 0)  {
                    jTextFieldHeight.setText("" + dim.getHeight());
                }
                else {
                    jTextFieldHeight.setText("" + dim.getHeight() * ( len / dim.getWidth()));
                }
            }
        } catch ( NumberFormatException e) {
            
        }       
    }//GEN-LAST:event_jTextFieldWidthActionPerformed

    private void jTextFieldHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHeightActionPerformed
        double len;
        Rectangle2D dim;
        if ( (dim = params.getViewRegion()) == null) return;
        try {
            if ( jTextFieldHeight.getText().equals("")) len = 0;
            else len = Double.parseDouble(jTextFieldHeight.getText());
            
            if ( jCheckBoxAspect.isEnabled() && jCheckBoxAspect.isSelected()) {
                if ( len == 0)  {
                    jTextFieldWidth.setText("" + dim.getHeight());
                }
                else {
                    jTextFieldWidth.setText("" + params.getImageWidth()* ( len / params.getImageHeight()));
                }
            }
        } catch ( NumberFormatException e) {
            
        }    
    }//GEN-LAST:event_jTextFieldHeightActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowse;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JCheckBox jCheckBoxAspect;
    private javax.swing.JCheckBox jCheckBoxVisible;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelFile;
    private javax.swing.JLabel jLabelRotation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextFieldAlpha;
    private javax.swing.JTextField jTextFieldDx;
    private javax.swing.JTextField jTextFieldDy;
    private javax.swing.JTextField jTextFieldFileName;
    private javax.swing.JTextField jTextFieldHeight;
    private javax.swing.JTextField jTextFieldRotation;
    private javax.swing.JTextField jTextFieldWidth;
    // End of variables declaration//GEN-END:variables

}
